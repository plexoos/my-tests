//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Mon Jul 23 18:55:02 2018 by ROOT version 6.13/04)
//      from the StreamerInfo in file sb/install-star-cvs-deb-32-root5-gcc4/st_physics_17135012_raw_2000025.MuDst.root
//////////////////////////////////////////////////////////


#ifndef StMuFmsCluster_h
#define StMuFmsCluster_h
class StMuFmsCluster;

#include "Rtypes.h"
#include "TObject.h"
#include "TRefArray.h"

class StMuFmsCluster : public TObject {

public:
// Nested classes declaration.

public:
// Data Members.
   UShort_t    mDetectorId;    ///< Detector ID as defined in database
   UShort_t    mCategory;      ///< Category of cluster (see EFmsClusterCategory)
   Float_t     mEnergy;        ///< Total energy contained in the cluster
   Float_t     mX;             ///< Mean x ("center of gravity")
   Float_t     mY;             ///< Mean y ("center of gravity")
   Float_t     mSigmaMin;      //Minimum 2nd moment
   Float_t     mSigmaMax;      //Maximum 2nd moment (along major axis)
   Float_t     mChi2Ndf1Photon;    //&chi;<sup>2</sup> / ndf for 1-photon fit
   Float_t     mChi2Ndf2Photon;    //&chi;<sup>2</sup> / ndf for 2-photon fit
   Int_t       mId;                //Eventwise cluster ID
   TRefArray   mHits;              ///< StMuFmsHits in the current cluster
   TRefArray   mPhotons;           ///< StMuFmsPoints in the cluster

   StMuFmsCluster();
   StMuFmsCluster(const StMuFmsCluster & );
   virtual ~StMuFmsCluster();

   ClassDef(StMuFmsCluster,2); // Generated by MakeProject.
};
#endif
